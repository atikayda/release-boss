# Example Release Boss configuration with PR-based changelog tracking
# Save this as .release-boss.yml in your project root

# Branch configuration
mergeBranch: main
stagingBranch: staging
releaseBranch: release
deleteStagingBranch: true  # Clean up staging branches after PR closure

# PR configuration
pullRequestTitle: "chore: release {version}"
pullRequestHeader: "# Release {version} üíÖ"

# Files to update with the new version
versionFiles:
  - path: package.json
    pattern: '"version": "(.+?)"'
  - path: VERSION
    pattern: "^(.+?)$"

# Template files (optional)
templateFiles:
  - path: src/version.js
    template: |
      // Auto-generated by Release Boss
      export const VERSION = '{version}';
      export const RELEASE_DATE = '{date}';

# Changelog configuration
changelogPath: CHANGELOG.md  # File-based changelog (optional)

# Changelog sections for file-based changelog
changelogSections:
  - type: feat
    section: "‚ú® Features"
    hidden: false
  - type: fix
    section: "üêõ Bug Fixes"
    hidden: false
  - type: perf
    section: "‚ö° Performance Improvements"
    hidden: false
  - type: docs
    section: "üìö Documentation"
    hidden: false
  - type: chore
    section: "üßπ Chores"
    hidden: true  # Hide chores from the changelog

# PR-based changelog table configuration
changelogTable:
  enabled: true
  markers:
    start: "<!-- RELEASE_BOSS_CHANGELOG_START -->"
    end: "<!-- RELEASE_BOSS_CHANGELOG_END -->"
  columns:
    - name: "Type"
      field: "type"
    - name: "Scope"
      field: "scope"
    - name: "Description"
      field: "description"
    - name: "PR"
      field: "pr"
    - name: "Commit"
      field: "commit"
    - name: "Author"
      field: "author"
